#!/bin/sh
# vim: set ft=sh sw=4 et :

# Source scripts/*.sh
for script in $HOME/.config/yadm/scripts/*.sh; do
    if [ -f "$script" ]; then
        echo "Sourcing $script"
        . $script
    fi
done

package_files_dir="$HOME/.config/yadm/packages/*.list"

install_packages () {
    for package_file in $package_files_dir; do
        if [ -f "$package_file" ]; then
            echo "Installing packages from $package_file"
            yay -S --needed --noconfirm - < $package_file
        fi
    done
}

enable_services () {
    systemctl --user enable --now pi-hole
    systemctl --user enable --now wallpaper.timer
    systemctl --user enable --now run-mount-scripts.timer
}

configure_docker () {
tee $HOME/.docker/config.json &>/dev/null <<EOF
    {
        "credsStore": "secretservice"
    }
EOF
sudo usermod -aG docker $USER
}

yadm alt

echo "Updating repositories"
yay -Syy

# Ask if user wants to install packages
read -p "Install packages? [y/N] " -n 1 -r
echo   # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    install_packages
fi

# Ask if user wants to configure vim
read -p "Configure vim? [y/N] " -n 1 -r
echo   # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    configure_vim
else
    read -p "Update vim plugins? [y/N] " -n 1 -r
    echo   # (optional) move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        update_vim_plugins
    fi
fi

# Ask if user wants to install zsh
read -p "Install zsh? [y/N] " -n 1 -r
echo   # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    install_zsh
else
    read -p "Update zsh? [y/N] " -n 1 -r
    echo   # (optional) move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        update_zsh
    fi
fi

# Ask if user wants to enable system services
read -p "Enable system services? [y/N] " -n 1 -r
echo   # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    enable_system_services
fi

# Ask if user wants to enable services
read -p "Enable user services? [y/N] " -n 1 -r
echo   # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    enable_services
fi

# Ask if user wants to configure resolvconf
read -p "Configure resolvconf? [y/N] " -n 1 -r
echo   # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    configure_resolvconf
fi

# Ask if user wants to configure docker
read -p "Configure docker? [y/N] " -n 1 -r
echo   # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    configure_docker
fi
